#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π - –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
"""
import os
import subprocess
from pathlib import Path
import time

def run_script(script_name, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å"""
    print(f"\nüöÄ {description}")
    print(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: python3 {script_name}")

    try:
        start_time = time.time()
        result = subprocess.run(
            ['python3', script_name],
            capture_output=True,
            text=True,
            timeout=300  # 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
        )

        end_time = time.time()
        duration = end_time - start_time

        if result.returncode == 0:
            print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ {duration:.1f} —Å–µ–∫")
            if result.stdout.strip():
                print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                for line in result.stdout.strip().split('\n')[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫
                    if line.strip():
                        print(f"  {line}")
        else:
            print(f"‚ùå {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π")
            if result.stderr.strip():
                print(f"–û—à–∏–±–∫–∞: {result.stderr.strip()}")

        return result.returncode == 0

    except subprocess.TimeoutExpired:
        print(f"‚è∞ {description} –ø—Ä–µ–≤—ã—Å–∏–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {script_name}: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ"""
    print("üéâ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)

    scripts_dir = Path("/Users/kirilltitov/Documents/Obsidian Vault")
    os.chdir(scripts_dir)

    # –°–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    maintenance_plan = [
        ("standardize_frontmatter.py", "–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Ñ—Ä–æ–Ω—Ç–º–∞—Ç—Ç–µ—Ä–∞"),
        ("find_duplicates.py", "–ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
        ("fix_broken_links.py", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫"),
        ("fix_frontmatter_issues.py", "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Ñ—Ä–æ–Ω—Ç–º–∞—Ç—Ç–µ—Ä–∞"),
        ("content_quality_analyzer.py", "–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
        ("maintenance_scripts.py", "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"),
        ("git_integration.py", "–ê–Ω–∞–ª–∏–∑ Git –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"),
    ]

    results = []

    for script_name, description in maintenance_plan:
        if Path(script_name).exists():
            success = run_script(script_name, description)
            results.append((description, success))
        else:
            print(f"‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            results.append((description, False))

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–Æ")
    print("=" * 60)

    successful = sum(1 for _, success in results if success)
    total = len(results)

    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {successful}/{total}")
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å: {total - successful}/{total}")

    print("\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:")
    for description, success in results:
        status = "‚úÖ" if success else "‚ùå"
        print(f"  {status} {description}")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if successful == total:
        print("üéâ –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("   –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏.")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")

    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ò–∑—É—á–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –≤ –∫–æ—Ä–Ω–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    print("2. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—Ä—É—á–Ω—É—é")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: python3 backup_script.py create")
    print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")

    print(f"\nüìÖ –í—Ä–µ–º—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: {time.strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {scripts_dir}")

    return 0 if successful == total else 1

if __name__ == "__main__":
    exit(main())
